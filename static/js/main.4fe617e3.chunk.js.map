{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedUserId","onSelectUserId","onSelectTodo","onIsLoading","className","map","todo","id","completed","cn","title","type","onClick","userId","handleSelect","TodoFilter","input","status","onChangeStatus","onChangeInput","onClearInput","onSubmit","event","preventDefault","name","value","onChange","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","getUser","Loader","TodoModal","user","onSetUser","isLoading","href","email","App","useState","data","setData","setStatus","setInput","setUserId","setUser","selectedTodo","setSelectedTodo","setIsLoading","handleGetTodo","loadTodoFunction","a","visibleTodos","filter","includes","useEffect","loadUserFunc","loadedUser","handleUserLoad","target","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4fe617e3.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  onSelectUserId: (id: number) => void,\n  selectedUserId: number | null,\n  onSelectTodo: (todo: Todo) => void,\n  onIsLoading: React.Dispatch<React.SetStateAction<boolean>>,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedUserId,\n  onSelectUserId,\n  onSelectTodo,\n  onIsLoading,\n}) => {\n  function handleSelect(todo: Todo) {\n    onSelectUserId(todo.userId);\n    onSelectTodo(todo);\n    onIsLoading(true);\n  }\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {!todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={\n                cn(\n                  'has-text-success',\n                  { 'has-text-danger': todo.completed },\n                )\n              }\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleSelect(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={\n                    cn(\n                      'far',\n                      { 'fa-eye-slash': todo.userId === selectedUserId },\n                      { 'fa-eye': todo.userId !== selectedUserId },\n                    )\n                  }\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  input: string,\n  status: string,\n  onChangeStatus: (event: React.ChangeEvent<HTMLSelectElement>) => void,\n  onChangeInput: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  onClearInput: () => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  input,\n  status,\n  onChangeStatus,\n  onChangeInput,\n  onClearInput,\n}) => {\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            name=\"color\"\n            value={status}\n            onChange={onChangeStatus}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          name=\"field\"\n          value={input}\n          onChange={onChangeInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {input && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              name=\"field\"\n              onClick={onClearInput}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  user: User | null,\n  todo: Todo,\n  onSetUser: React.Dispatch<React.SetStateAction<User | null>>,\n  onSelectUserId: (id: number) => void,\n  onSelectTodo: React.Dispatch<React.SetStateAction<Todo | null>>,\n  isLoading: boolean,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  user,\n  todo,\n  onSetUser,\n  onSelectUserId,\n  onSelectTodo,\n  isLoading,\n}) => {\n  function handleSelect() {\n    onSetUser(null);\n    onSelectTodo(null);\n    onSelectUserId(0);\n  }\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleSelect}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-danger\">Planned</strong>\n              ) : (\n                <strong className=\"has-text-success\">Done</strong>\n              )}\n\n              {' by '}\n              {user !== null && (\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [data, setData] = useState<Todo[]>([]);\n  const [status, setStatus] = useState('all');\n  const [input, setInput] = useState('');\n  const [userId, setUserId] = useState<number | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const handleGetTodo = async (loadTodoFunction: () => Promise<Todo[]>) => {\n    const todos = await loadTodoFunction();\n\n    setData(todos);\n  };\n\n  const visibleTodos = data.filter((todo) => {\n    if (todo.title.includes(input)) {\n      switch (status) {\n        case 'completed':\n          return !todo.completed;\n        case 'active':\n          return todo.completed;\n        case 'all':\n        default:\n          return true;\n      }\n    }\n\n    return false;\n  });\n\n  useEffect(() => {\n    handleGetTodo(getTodos);\n  }, []);\n\n  const clearInput = () => {\n    setInput('');\n  };\n\n  const handleChangeStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setStatus(value);\n  };\n\n  const handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setInput(value);\n  };\n\n  async function handleUserLoad(\n    loadUserFunc: (userId: number) => Promise<User>,\n  ) {\n    if (userId === null || userId === 0) {\n      return;\n    }\n\n    const loadedUser = await loadUserFunc(userId);\n\n    setUser(loadedUser);\n    setIsLoading(false); // *stop spinners in TodoModal component\n  }\n\n  useEffect(() => {\n    handleUserLoad(getUser);\n  }, [userId]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                input={input}\n                status={status}\n                onChangeStatus={handleChangeStatus}\n                onChangeInput={handleChangeInput}\n                onClearInput={clearInput}\n              />\n            </div>\n\n            <div className=\"block\">\n              {data.length\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    onSelectUserId={setUserId}\n                    selectedUserId={userId}\n                    onSelectTodo={setSelectedTodo}\n                    onIsLoading={setIsLoading}\n                  />\n                ) : (\n                  <Loader />\n                )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {!!selectedTodo\n        && (\n          <TodoModal\n            todo={selectedTodo}\n            user={user}\n            onSetUser={setUser}\n            onSelectUserId={setUserId}\n            onSelectTodo={setSelectedTodo}\n            isLoading={isLoading}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}