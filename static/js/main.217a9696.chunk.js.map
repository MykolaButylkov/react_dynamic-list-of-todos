{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedUserId","onSelectUserId","onSelectTodo","className","map","todo","id","completed","cn","title","type","onClick","userId","TodoFilter","input","status","onChangeStatus","onChangeInput","onClearInput","onSubmit","event","preventDefault","name","value","onChange","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","getUser","Loader","TodoModal","user","onSetUser","console","log","href","email","App","useState","data","setData","setStatus","setInput","setUserId","setUser","selectedTodo","setSelectedTodo","handleGetTodo","f","a","visibleTodos","filter","includes","useEffect","loadedUser","handleUserLoad","handleSelectUserId","target","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.217a9696.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  onSelectUserId: (id: number) => void,\n  selectedUserId: number | null,\n  onSelectTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedUserId,\n  onSelectUserId,\n  onSelectTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {!todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={\n                cn(\n                  'has-text-success',\n                  { 'has-text-danger': todo.completed },\n                )\n              }\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  onSelectUserId(todo.userId);\n                  onSelectTodo(todo);\n                }}\n              >\n                {todo.userId === selectedUserId ? (\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye-slash\" />\n                  </span>\n                ) : (\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                )}\n\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  input: string,\n  status: string,\n  onChangeStatus: (event: React.ChangeEvent<HTMLSelectElement>) => void,\n  onChangeInput: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  onClearInput: () => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  input,\n  status,\n  onChangeStatus,\n  onChangeInput,\n  onClearInput,\n}) => {\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            name=\"color\"\n            value={status}\n            onChange={onChangeStatus}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          name=\"field\"\n          value={input}\n          onChange={onChangeInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {input && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              name=\"field\"\n              onClick={onClearInput}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  user: User | null,\n  todo: Todo,\n  onSetUser: React.Dispatch<React.SetStateAction<User | null>>,\n  onSelectUserId: (id: number) => void,\n  onSelectTodo: React.Dispatch<React.SetStateAction<Todo | null>>,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  user,\n  todo,\n  onSetUser,\n  onSelectUserId,\n  onSelectTodo,\n}) => (\n  <div className=\"modal is-active\" data-cy=\"modal\">\n    <div className=\"modal-background\" />\n\n    {user === null ? (\n      <Loader />\n    ) : (\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <div\n            className=\"modal-card-title has-text-weight-medium\"\n            data-cy=\"modal-header\"\n          >\n            Todo #\n            {todo.id}\n          </div>\n\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            type=\"button\"\n            className=\"delete\"\n            data-cy=\"modal-close\"\n            onClick={() => {\n              onSetUser(null);\n              onSelectTodo(null);\n              onSelectUserId(0);\n\n              // eslint-disable-next-line no-console\n              console.log(`user is => ${user.id}`);\n            }}\n          />\n        </header>\n\n        <div className=\"modal-card-body\">\n          <p className=\"block\" data-cy=\"modal-title\">\n            {todo.title}\n          </p>\n\n          <p className=\"block\" data-cy=\"modal-user\">\n            {todo.completed ? (\n              <strong className=\"has-text-danger\">Planned</strong>\n            ) : (\n              <strong className=\"has-text-success\">Done</strong>\n            )}\n\n            {' by '}\n\n            <a href={`mailto:${user.email}`}>\n              {user.name}\n            </a>\n          </p>\n        </div>\n      </div>\n    )}\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [data, setData] = useState<Todo[]>([]);\n  const [status, setStatus] = useState('all');\n  const [input, setInput] = useState('');\n  const [userId, setUserId] = useState<number | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const handleGetTodo = async (f: () => Promise<Todo[]>) => {\n    const todos = await f();\n\n    setData(todos);\n  };\n\n  let visibleTodos = data.filter((todo) => {\n    switch (status) {\n      case 'completed':\n        return !todo.completed;\n      case 'active':\n        return todo.completed;\n      case 'all':\n      default:\n        return todo;\n    }\n  });\n\n  visibleTodos = visibleTodos.filter((todo) => (todo.title.includes(input)));\n\n  useEffect(() => {\n    handleGetTodo(getTodos);\n  }, []);\n\n  const clearInput = () => {\n    setInput('');\n  };\n\n  const handleChangeStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setStatus(value);\n  };\n\n  const handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setInput(value);\n  };\n\n  async function handleUserLoad(f: (userId: number) => Promise<User>) {\n    if (userId === null || userId === 0) {\n      return;\n    }\n\n    const loadedUser = await f(userId);\n\n    setUser(loadedUser);\n  }\n\n  useEffect(() => {\n    handleUserLoad(getUser);\n  }, [userId]);\n\n  const handleSelectUserId = (id: number | null) => {\n    setUserId(id);\n  };\n\n  const handleSelectTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                input={input}\n                status={status}\n                onChangeStatus={handleChangeStatus}\n                onChangeInput={handleChangeInput}\n                onClearInput={clearInput}\n              />\n            </div>\n\n            <div className=\"block\">\n              {data.length > 0\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    onSelectUserId={handleSelectUserId}\n                    selectedUserId={userId}\n                    onSelectTodo={handleSelectTodo}\n                  />\n                ) : (\n                  <Loader />\n                )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo !== null\n        && (\n          <TodoModal\n            todo={selectedTodo}\n            user={user}\n            onSetUser={setUser}\n            onSelectUserId={handleSelectUserId}\n            onSelectTodo={setSelectedTodo}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}